plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.5'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.openapi.generator' version '7.5.0'
  id "io.freefair.lombok" version "8.6"
}

java {
  sourceCompatibility = '21'
}

repositories {
  mavenCentral()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

sourceSets {
  main {
    java {
      srcDirs += "./build/generated/sources/openapi/src/main/java"
    }
  }
}

dependencies {
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'

}

group = 'com.github.malyshevhen'
version = '0.0.1-SNAPSHOT'
description = 'users-api'

tasks.named('test') {
  useJUnitPlatform()
}

openApiGenerate {
  generatorName = 'spring'
  outputDir = "$buildDir/generated/sources/openapi"
  inputSpec = "$rootDir/src/main/resources/swagger/api-specs.yaml"
  apiPackage = 'com.github.malyshevhen.api'
  modelPackage = 'com.github.malyshevhen.dto'
  groupId = 'com.github.malyshevhen'
  id = 'USERS_API'
  typeMappings = [
    UsersPage:'org.springframework.data.domain.Page<com.github.malyshevhen.dto.UserInfo>'
  ]
  schemaMappings = [
    PageableObject:'org.springframework.data.domain.Pageable',
    Address:'com.github.malyshevhen.models.Address',
    ErrorResponse:'com.github.malyshevhen.exceptions.ErrorResponse',
    DateRange:'com.github.malyshevhen.models.DateRange'
  ]
  configOptions = [
    useTags:'true',
    useJakartaEe:'true',
    delegatePattern:'false',
    interfaceOnly:'true',
    serializableModel:'true',
    useBeanValidation:'true',
    performBeanValidation:'true',
    documentationProvider:'none',
    library: 'spring-boot',
    useSpringBoot3: 'true'
  ]
}

tasks.named("compileJava").configure {
  dependsOn("openApiGenerate")
}

tasks.named('test', Test) {
  useJUnitPlatform()
  testLogging {
    events = ["PASSED", "FAILED", "SKIPPED"]
    exceptionFormat = "full"
  }

  afterSuite { desc, result ->
    if (!desc.parent) {
      def output = "Results: ${result.resultType}" +
              " (${result.testCount} tests," +
              " ${result.successfulTestCount} passed," +
              " ${result.failedTestCount} failed," +
              " ${result.skippedTestCount} skipped)"
      def startItem = '|  ', endItem = '  |'
      def repeatLength = startItem.length() + output.length() + endItem.length()
      println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
    }
  }
}
